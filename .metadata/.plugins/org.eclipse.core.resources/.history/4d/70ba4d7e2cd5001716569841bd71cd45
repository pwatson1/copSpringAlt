package com.pawdirect.spring.controller;

import static org.junit.Assert.*;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.test.context.TestContext;
import org.springframework.ui.Model;
import org.springframework.web.context.WebApplicationContext;

import com.pawdirect.spring.dao.User;
import com.pawdirect.spring.service.UsersService;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = {TestContext.class, WebApplicationContext.class})
@WebAppConfiguration
public class LoginControllerTest {
	
	private MockMvc mockMvc;
	
	@Autowired
	UsersService usMock;
	
    @Autowired
    private WebApplicationContext webApplicationContext;
	
	public LoginController lc = null;
	//Model model = null;
	//public User user = null;

	@Before
	public void setUp() throws Exception {
		//Mockito.reset(usMock);
		usMock = Mockito.mock(UsersService.class);
		
		List user1 = new ArrayList();
		user1.add("paul");
		user1.add("open");
		user1.add("paul@nowhere.com");
		user1.add(true);
		user1.add("admin");
		
		List user2 = new ArrayList();
		user2.add("michele");
		user2.add("enter");
		user2.add("paul@nowhere.com");
		user2.add(true);
		user2.add("user");
		
		List users = new ArrayList();
		users.add(user1);
		users.add(user2);
		
        mockMvc = MockMvcBuilders.webAppContextSetup(webApplicationContext).build();		
		
		lc = new LoginController();
		/*
		
		*/
		//model = Mockito.mock(Model.class);
		//user = Mockito.mock(User.class);
		
	}

	@Test
	public void testShowAdminB() {
		
		//Model model = (Model) new User();
		List<User> users = usMock.getAllUsers();
		
		when(usMock.getAllUsers()).thenReturn(users);
	}
	
	

}
